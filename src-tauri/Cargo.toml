[package]
name = "kotlin_shuttle"
version = "0.1.0"
description = "KotlinShuttle is a JetBrains-inspired GUI tool for local development of Swift and Kotlin. This project is an internship submission for the JetBrains internships for 2024. Design and icon is inspired by JetBrains. "
authors = ["Zakrok09"]
license = "MIT"
repository = "https://github.com/Zakrok09/KotlinShuttle"
default-run = "kotlin_shuttle"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.1", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.5.4", features = [ "shell-execute", "shell-open", "shell-sidecar", "path-all", "fs-read-dir", "fs-remove-file", "fs-exists", "fs-create-dir", "fs-rename-file", "fs-copy-file", "fs-read-file", "fs-write-file", "fs-remove-dir", "window-maximize", "window-unminimize", "window-show", "window-start-dragging", "window-unmaximize", "window-close", "window-hide", "window-minimize"] }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
